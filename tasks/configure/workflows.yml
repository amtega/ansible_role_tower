---
# Setup workflows tasks

- block:
    - name: Launch tower workflows templates setup
      awx.awx.tower_workflow_job_template:
        allow_simultaneous: >-
          {{ tower_workflow_item.allow_simultaneous | default(omit) }}
        ask_variables_on_launch: >-
          {{ tower_workflow_item.ask_variables_on_launch | default(omit) }}
        ask_inventory_on_launch: >-
          {{ tower_workflow_item.ask_variables_on_launch | default(omit) }}
        description: >-
          {{ tower_workflow_item.description | default(omit) }}
        extra_vars: >-
          {{ tower_workflow_item.extra_vars | default(omit) }}
        inventory: >-
          {{ tower_workflow_item.inventory | default(omit) }}
        name: >-
          {{ tower_workflow_item.name | default(omit) }}
        organization: >-
          {{ tower_workflow_item.organization | default(omit) }}
        state: >-
          {{ tower_workflow_item.state | default(omit) }}
        survey_enabled: >-
          {{ tower_workflow_item.survey_enabled | default(omit) }}
        survey_spec: >-
          {{ tower_workflow_item.survey_spec | default(omit) }}
        tower_config_file: "{{ tower_config_file | default(omit) }}"
        tower_host: "{{ tower_host }}"
        tower_password: "{{ tower_password }}"
        tower_username: "{{ tower_username }}"
        validate_certs: "{{ tower_validate_certs }}"
      register: tower_workflows_async_setup_result
      changed_when: no
      loop: "{{ _tower_workflows_to_manage }}"
      loop_control:
        loop_var: tower_workflow_item
        label: "{{ tower_workflow_item.name }}"
      async: "{{ tower_async_timeout }}"
      poll: 0
      ignore_errors: "{{ tower_ignore_errors | bool }}"
      no_log: "{{ tower_no_log }}"

    - name: Check tower workflows templates setup
      async_status:
        jid: >-
          {{ tower_workflows_async_setup_result.results
             [tower_workflow_index].ansible_job_id }}
      when: tower_workflows_async_setup_result is defined
      register: tower_workflows_setup_result
      loop: >-
        {{ _tower_workflows_to_manage
           | selectattr("state", "equalto", "present")
           | list }}
      loop_control:
        loop_var: tower_workflow_item
        index_var: tower_workflow_index
        label: "{{ tower_workflow_item.name }}"
      until: tower_workflows_setup_result.finished
      retries: "{{ tower_get_status_retries }}"
      delay: "{{ tower_get_status_delay }}"
      ignore_errors: "{{ tower_ignore_errors | bool }}"
  tags:
    - role::tower
    - role::tower::configure
    - role::tower::configure::workflows
